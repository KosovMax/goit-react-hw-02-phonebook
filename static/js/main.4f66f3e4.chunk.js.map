{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["INITIAL_STATE","name","phone","ContactForm","props","handleChange","target","value","setState","handleSubmit","evt","preventDefault","onFindName","onPhonebook","state","alert","id","uuidv4","reset","validName","contacts","filter","contact","this","className","onSubmit","htmlFor","type","onChange","Component","ContactList","removeContactId","toLowerCase","startsWith","map","onClick","Filter","onFilter","defaultProps","App","updatePhonebook","newContact","prevState","findName","find","updateFilter","console","log","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.4f66f3e4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './ContactForm.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    name:\"\",\r\n    phone:\"\"\r\n}\r\n\r\nexport default class ContactForm extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            ...INITIAL_STATE\r\n        }\r\n    }\r\n\r\n    handleChange = ({target}) => {\r\n        const { name, value } = target;\r\n        this.setState({ [name] : value })\r\n    }\r\n\r\n    handleSubmit = evt => {\r\n        evt.preventDefault();\r\n\r\n        const { onFindName, onPhonebook } = this.props;\r\n        const { name, phone } = this.state;\r\n\r\n        if(!name || !phone){\r\n            alert('Name or phone filed is empty.');\r\n            return false; \r\n        }\r\n\r\n        if( onFindName(name) != null){\r\n            alert(name + ' is already in contacts.');\r\n            return false;\r\n        }\r\n\r\n\r\n        onPhonebook({id:uuidv4(), ...this.state});\r\n\r\n        this.reset();\r\n\r\n    }\r\n\r\n    validName = (name) => {\r\n        const { contacts } = this.props;\r\n        return contacts.filter((contact) => {\r\n            return contact.name === name\r\n        })\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({ ...INITIAL_STATE });\r\n    };\r\n\r\n    render(){\r\n\r\n        const { name, phone } = this.state;\r\n        return (\r\n            \r\n            <form className=\"phonebook\" onSubmit={this.handleSubmit}>\r\n                <label htmlFor=\"name_1\">Name</label><br/>\r\n                <input type=\"text\" name=\"name\" id=\"name_1\" value={name} onChange={this.handleChange}/>\r\n                <br/>\r\n                <label htmlFor=\"phone_1\">Number</label><br/>\r\n                <input type=\"tel\" name=\"phone\" id=\"phone_1\" value={phone} onChange={this.handleChange}/>\r\n                <br/>\r\n                <br/>\r\n                <button type=\"submit\">Add contact</button>\r\n            </form>\r\n\r\n        );\r\n\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class ContactList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        const { filter, contacts, removeContactId } = this.props;\r\n\r\n        return(\r\n                <ul>\r\n                    {\r\n                        contacts.filter(contact => {\r\n                            return contact.name.toLowerCase().startsWith(filter.toLowerCase());\r\n                        }).map(({id, name, phone}) => (\r\n                            <li key={id}><span> {name}: {phone} </span><button onClick={()=>{removeContactId(id)}}>Delete</button> </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Filter extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            filter: this.props.filter\r\n        }\r\n    }\r\n\r\n    static defaultProps = {\r\n        filter:''\r\n    }\r\n\r\n    static propTypes = {\r\n        filter: PropTypes.string.isRequired\r\n    }\r\n\r\n    handleChange = evt => {\r\n\r\n        this.setState({ filter: evt.target.value });\r\n\r\n        const { onFilter } = this.props;\r\n\r\n        onFilter(evt.target.value);\r\n\r\n    }\r\n\r\n    handleSubmit = evt => {\r\n        evt.preventDefault();\r\n    }\r\n\r\n\r\n    render(){\r\n        const { filter } = this.state;\r\n        return(\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label htmlFor=\"filter_1\">Find contacts by name</label><br/>\r\n                <input type=\"text\" name=\"filter\" id=\"filter_1\" value={filter}  onChange={this.handleChange} />\r\n            </form>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\nimport ContactForm from './ContactForm/ContactForm'\nimport ContactList from './ContactList/ContactList'\nimport Filter from './Filter/Filter'\n\nexport default class App extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            contacts: [],\n            filter: ''\n          }\n    }\n\n    updatePhonebook = (newContact) => {\n        this.setState(prevState => {\n            return{ contacts: [...prevState.contacts, newContact] }\n        })\n    }\n\n    findName = (name) => {\n        const { contacts } = this.state;\n        return contacts.find((contact) => {\n            return contact.name === name\n        })\n    }\n\n    updateFilter = (filter) =>{\n      this.setState({filter:filter})\n    }\n\n    removeContactId = (id) => {\n        this.setState(prevState => {\n            return {contacts: prevState.contacts.filter(contact => contact.id !== id)}\n        });\n    }\n\n    render(){\n\n        console.log(this.state);\n\n        const { name, contacts, filter} = this.state;\n\n        return (\n           <>   \n                <h2>Phonebook</h2>\n                <ContactForm onFindName={this.findName} onPhonebook={this.updatePhonebook} />\n\n                <h2>Contacts</h2>\n                <Filter filter={filter} onFilter={this.updateFilter} />\n                <ContactList contacts={contacts} filter={filter} removeContactId={this.removeContactId}/> \n           </>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App/>, document.querySelector('#root'));\n"],"sourceRoot":""}